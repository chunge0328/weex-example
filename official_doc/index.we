<style>
  .content {
    color: #353535;
    background-color: #666;
  }
  .tabbar {
    background-color: #fff;
  }
</style>

<template>
  <div>
    <!-- <wxc-navbar></wxc-navbar> -->
    <wxc-tabbar class="tabbar" tab-items={{tabItems}} unselected-color={{unselectColor}} selected-color={{selectColor}}></wxc-tabbar>
  </div>
</template>

<script>
  require('weex-components')
  var styles = require('./include/styles.js').methods;
  var tools = require('./include/tools.js').methods;
  module.exports = {
    data: {
      dir: 'official_doc',
      selectColor:"#238EF5",
      unselectColor:"#6b6969",
      tabItems: [{
	      index: 0,
	      title: "模板",
	      titleColor: 0x0,
	      icon: "",
	      image: "local://tab1.png",
	      selectedImage: "local://tab1_selected.png",
	      src: "tab1/index.js",
	      visibility: "visible"
	    }, {
	      index: 1,
	      title: "Cloud App",
	      titleColor: 0x0,
	      icon: "",
	      image: "local://tab2.png",
	      selectedImage: "local://tab2_selected.png",
	      src: "tab2/index.js",
	      visibility: "hidden"
	    }, {
          index: 2,
          title: "帮助文档",
          titleColor: 0x0,
          icon:"",
          image: "local://tab3.png",
          selectedImage: "local://tab3_selected.png",
          src: "tab3/index.js",
          visibility: "hidden",
      }
      ],
    },
    created: function () {
      var bundleUrl = this.$getConfig().bundleUrl;
      var nativeBase;
      var isAndroidAssets = bundleUrl.indexOf('your_current_IP') >= 0 || bundleUrl.indexOf('file://assets/')>=0;
      var isiOSAssets = bundleUrl.indexOf('file:///') >= 0 && bundleUrl.indexOf('BXProject.app') > 0;
      if (isAndroidAssets) {
        nativeBase = 'file://assets/';
      } else if (isiOSAssets) {
        // file:///var/mobile/Containers/Bundle/Application/{id}/WeexDemo.app/
        // file:///Users/{user}/Library/Developer/CoreSimulator/Devices/{id}/data/Containers/Bundle/Application/{id}/WeexDemo.app/
        nativeBase = bundleUrl.substring(0, bundleUrl.lastIndexOf('/') + 1);
      } else {
        var host = 'localhost:12580';
        var matches = /\/\/([^\/]+?)\//.exec(this.$getConfig().bundleUrl);
        if (matches && matches.length >= 2) {
          host = matches[1];
        }
        nativeBase = 'http://' + host + '/' + this.dir + '/build/';
      }
      var h5Base = './' + this.dir + '/build/';
      // in Native
      var base = nativeBase;
      if (typeof window === 'object') {
        // in Browser or WebView
        base = h5Base;
      }
      var style = tools.getParameterByName("styles",bundleUrl);
      for(var i = 0; i < this.tabItems.length; i++) {
          var tabItem = this.tabItems[i];
          tabItem.src = base + tabItem.src +'?styles='+style;
      }
      styles.setTabCustomColor(this);
    },
    methods: {
      ready: function (e) {
        var vm = this;
        vm.$on('tabBar.onClick',function(e){
          var detail= e.detail;
          nativeLog('tabBar.onClick ' + detail.index);
        });
      },
    }
  }
</script>
